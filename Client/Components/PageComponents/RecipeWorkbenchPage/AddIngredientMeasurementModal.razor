@using BlazingRecept.Client.Components.PageComponents.Base
@using BlazingRecept.Client.Components.Common;
@using BlazingRecept.Client.Utilities;
@using BlazingRecept.Shared
@using BlazingRecept.Shared.Dto
@using static BlazingRecept.Shared.Enums

@inherits PageComponentBase

<HxModal @ref="_modal" Title="Lägg till ingrediens" OnShown="@HandleOnShown">
    <BodyTemplate>
        <EditForm id="@_editFormId" EditContext="_editContext" OnValidSubmit="@HandleValidFormSubmitted">
            <CustomValidation @ref="_customValidation" />
            <div class="row mb-2">
                <div class="col">
                    <HxAutosuggest @ref="_name"
                                   id="name"
                                   Placeholder="Ange namn"
                                   TItem="IngredientDto"
                                   TValue="IngredientDto"
                                   @bind-Value="@_form.IngredientDto"
                                   DataProvider="ProvideSuggestionsToNameAutosuggest"
                                   TextSelector="ResolvePickedAutosuggestItemToTextInNameAutosuggest"
                                   ShowValidationMessage=false>
                        <ItemTemplate Context="ingredientDto">@ingredientDto.Name</ItemTemplate>
                        <EmptyTemplate>
                            <span class="p-2">Kan inte hitta ingrediens med angivet namn.</span>
                        </EmptyTemplate>
                    </HxAutosuggest>
                    <ValidationMessage For="() => _form.IngredientDto" />
                </div>
            </div>
            <div class="row mb-2">
                <div class="col">
                    <div class="input-group">
                        <input type="text" id="measurement" class="form-control" placeholder="Ange mängd" @bind="_form!.Measurement">
                        <select class="form-select" @bind="_form!.MeasurementUnit">
                            @foreach (MeasurementUnit measurementUnit in Enum.GetValues(typeof(MeasurementUnit)))
                            {
                                if (measurementUnit == MeasurementUnit.Unassigned)
                                {
                                    <option value="@measurementUnit">Ange mätningstyp</option>
                                }
                                else
                                {
                                    <option value="@measurementUnit">@measurementUnit.ToSymbol()</option>
                                }
                            }
                        </select>
                    </div>
                    <ValidationMessage For="() => _form.Measurement" />
                    <ValidationMessage For="() => _form.MeasurementUnit" />
                </div>
            </div>
            <div class="row mb-2">
                <div class="col">
                    <input type="text" id="grams" class="form-control" placeholder="Ange gram" @bind="_form!.Grams">
                    <ValidationMessage For="() => _form.Grams" />
                </div>
            </div>
            <div class="row mb-2">
                <div class="col">
                    <input type="text" id="note" class="form-control" placeholder="Ange anteckning" @bind="_form!.Note">
                </div>
            </div>
        </EditForm>
    </BodyTemplate>
    <FooterTemplate>
        <button form="@_editFormId" class="btn btn-primary" type="submit">Lägg till</button>
        <button class="btn btn-secondary" type="button" @onclick="@(_ => HandleCancel())">Avbryt</button>
    </FooterTemplate>
</HxModal>